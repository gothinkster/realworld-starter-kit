name: Continuous Delivery Pipeline

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    services:
      postgres:
        image: postgres:13.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - run: npm install
      - name: Running unit tests
        run: npm run test:unit
        shell: bash

      - name: Starting localhost server
        shell: sh
        run: |
          npm run build
          nohup npm run start:prod &
          chmod +x ./scripts/wait_for_status.sh
          ./scripts/wait_for_status.sh http://localhost:3000/api/health 200

      - name: Running acceptance tests on localhost server
        run: API_URL=http://localhost:3000/api npm run test:acceptance

      - uses: docker/setup-buildx-action@v2

      - id: build
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          push: false
          tags: 'app'

      - name: Starting docker server
        shell: sh
        run: |
          nohup docker run --rm -d --name app app &
          IP=$(docker container inspect app --format '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}')
          chmod +x ./scripts/wait_for_status.sh
          ./scripts/wait_for_status.sh http://"$IP":3000/api/health 200

      - name: Running acceptance tests on docker server
        run: API_URL=http://localhost:3001/api npx jest acceptance
