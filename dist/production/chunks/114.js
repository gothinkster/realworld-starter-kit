(self.webpackChunkneo_mjs_realworld_example_app=self.webpackChunkneo_mjs_realworld_example_app||[]).push([[114],{201:(e,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>i});var t=s(643),o=s(627);class d extends t.Z{static getConfig(){return{className:"Neo.main.addon.MapboxGL",dataMap:{},downloadPath:"https://api.mapbox.com/mapbox-gl-js/",layers:{},maps:{},mapsToCreate:[],scriptsLoaded_:!1,singleton:!0,sources:{},remote:{app:["addLayers","addSources","autoResize","center","create","destroy","setFilter","setLayoutProperty","setPaintProperty","setStyle","updateData","zoom"]},styleMap:{},version:"v1.9.1",zoomMap:{}}}constructor(e){super(e),this.insertMapboxGLScripts()}addLayers(e){const a=this,s=a.maps[e.id];let t;s?e.layers.forEach((e=>{t=e.beforeId,delete e.beforeId,s.addLayer(e,t)})):a.layers[e.id]=Object.assign(a.layers[e.id]||{},e)}addSources(e){const a=this,s=a.maps[e.id];let t;s?e.sources.forEach((e=>{t=e.id,delete e.id,s.addSource(t,e)})):a.sources[e.id]=Object.assign(a.sources[e.id]||{},e)}afterSetScriptsLoaded(e,a){if(e){const e=this;e.mapsToCreate.forEach((a=>{e.create(a)})),e.mapsToCreate=[]}}applyStyleObject(e,a,s){s&&(this.styleMap[s]=a),a.layers.forEach((a=>{Object.entries(a.paint).forEach((([s,t])=>{e.setPaintProperty(a.id,s,t)}))}))}autoResize(e){const a=this.maps[e.id];a&&setTimeout((()=>{a.resize()}),100)}center(e){const a=this.maps[e.id],s={lat:e.lat,lng:e.lng};a&&(e.animate?a.flyTo({center:s}):a.setCenter(s))}create(e){const a=this;if(a.scriptsLoaded){mapboxgl.accessToken=e.accessToken;let s=e.zoom;a.zoomMap[e.id]&&(s=a.zoomMap[e.id].zoom,delete a.zoomMap[e.id]),a.maps[e.id]=new mapboxgl.Map({center:e.center,container:e.id,style:e.mapboxStyle,zoom:s}),a.maps[e.id].on("load",a.onMapLoaded.bind(a,e))}else a.mapsToCreate.push(e)}destroy(e){this.maps[e.id].remove(),delete this.maps[e.id]}hasMap(e){return!!this.maps[e]}insertMapboxGLScripts(){const e=this,a=e.downloadPath+e.version+"/";Promise.all([o.Z.loadScript(a+"mapbox-gl.js"),o.Z.loadStylesheet(a+"mapbox-gl.css")]).then((()=>{e.scriptsLoaded=!0}))}onMapLoaded(e,a){const s=this,t=e.id;e.sources?s.addSources({id:e.id,sources:e.sources}):s.sources[t]&&(s.addSources(s.sources[t]),delete s.sources[t]),e.layers?s.addLayers({id:e.id,layers:e.layers}):s.layers[t]&&(s.addLayers(s.layers[t]),delete s.layers[t]),a.target.loaded()?s.onMapReallyLoaded(e,a):a.target.once("idle",s.onMapReallyLoaded.bind(s,e))}onMapReallyLoaded(e,a){const s=this;setTimeout((()=>{e.data?s.updateData({data:e.data,dataSourceId:e.dataSourceId,id:e.id}):s.dataMap[e.id]&&s.updateData(s.dataMap[e.id])}),100)}setFilter(e){const a=this.maps[e.id];a&&a.setFilter(e.layerId,e.value,e.options||{})}setLayoutProperty(e){const a=this.maps[e.id];a&&a.setLayoutProperty(e.layerId,e.key,e.value,e.options||{})}setPaintProperty(e){const a=this.maps[e.id];a&&a.setPaintProperty(e.layerId,e.key,e.value,e.options||{})}setStyle(e){const a=this;a.scriptsLoaded&&a.hasMap(e.id)&&Neo.isString(e.style)&&(0===e.style.indexOf("mapbox://styles/")&&(e.style=e.style.substring(16)),a.styleMap[e.style]?a.applyStyleObject(a.maps[e.id],a.styleMap[e.style]):fetch(`https://api.mapbox.com/styles/v1/${e.style}?access_token=${e.accessToken}`).then((e=>e.json())).then((s=>a.applyStyleObject(a.maps[e.id],s,e.style))))}updateData(e){const a=this;if(a.scriptsLoaded&&a.hasMap(e.id)){const s=a.maps[e.id].getSource(e.dataSourceId);s?(s.setData(e.data),delete a.dataMap[e.id]):a.dataMap[e.id]=e}else a.dataMap[e.id]=e}zoom(e){const a=this.maps[e.id];a?a.setZoom(e.zoom):this.zoomMap[e.id]=e}}Neo.applyClassConfig(d);let r=Neo.create(d);Neo.applyToGlobalNs(r);const i=r}}]);