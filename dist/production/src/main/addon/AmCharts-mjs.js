(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{8:function(a,t,e){"use strict";e.r(t);var s=e(0),o=e(2);class r extends s.a{static getConfig(){return{className:"Neo.main.addon.AmCharts",charts:{},chartsToCreate:[],dataMap:{},downloadPath:"https://www.amcharts.com/lib/4/",fallbackPath:"https://neomjs.github.io/pages/resources/amCharts/",scriptsLoaded_:!1,singleton:!0,remote:{app:["callMethod","create","destroy","setProperties","setProperty","updateData"]}}}constructor(a){super(a),this.insertAmChartsScripts()}afterSetScriptsLoaded(a,t){if(a){const a=this;a.chartsToCreate.forEach(t=>{a.create(t)}),a.chartsToCreate=[],setTimeout(()=>{Object.entries(a.dataMap).forEach(([t,e])=>{a.updateData(e)}),a.dataMap={}},1e3)}}callMethod(a){if(this.hasChart(a.id)){const t=this.charts[a.id],e=a.path.split("."),s=e.pop(),o=e.length<1?t:Neo.ns(e.join("."),!1,t);o[s].call(o,...a.params||[])}}combineSeriesTooltip(a){a.series.each(t=>{t.adapter.add("tooltipText",()=>{let t="[bold]{dateX}[/]\n";return a.series.each(a=>{t+="["+a.stroke+"]●[/] "+a.name+": {"+a.dataFields.valueY+"}\n"}),t})})}create(a){const t=this;t.scriptsLoaded?(t.charts[a.id]=am4core.createFromConfig(a.config,a.id,self[a.package][a.type||"XYChart"]),a.combineSeriesTooltip&&t.combineSeriesTooltip(t.charts[a.id]),a.data?t.updateData({data:a.data,dataPath:a.dataPath,id:a.id}):t.dataMap[a.id]&&(t.updateData(t.dataMap[a.id]),delete t.dataMap[a.id])):t.chartsToCreate.push(a)}destroy(a){this.charts[a.id].dispose(),delete this.charts[a.id]}hasChart(a){return!!this.charts[a]}insertAmChartsScripts(a=!1){const t=this,e=a?t.fallbackPath:t.downloadPath;o.a.loadScript(e+"core.js").then(()=>{Promise.all([o.a.loadScript(e+"charts.js"),o.a.loadScript(e+"maps.js"),o.a.loadScript(e+"geodata/worldLow.js")]).then(()=>{t.scriptsLoaded=!0})}).catch(a=>{console.log("Download from amcharts.com failed, switching to fallback",a),t.insertAmChartsScripts(!0)})}setProperties(a){Object.entries(a.properties).forEach(([t,e])=>{this.setProperty({id:a.id,path:t,value:e})})}setProperty(a){if(this.hasChart(a.id)){const t=this.charts[a.id],e=a.path.split("."),s=e.pop();Neo.ns(e.join("."),!1,t)[s]=a.isColor?am4core.color(a.value):a.value}}updateData(a){const t=this;if(t.scriptsLoaded&&t.hasChart(a.id)){const e=t.charts[a.id];""===a.dataPath?e.data=a.data:Neo.ns(a.dataPath,!1,e).data=a.data}else t.dataMap[a.id]=a}}Neo.applyClassConfig(r);let i=Neo.create(r);Neo.applyToGlobalNs(i),t.default=i}}]);