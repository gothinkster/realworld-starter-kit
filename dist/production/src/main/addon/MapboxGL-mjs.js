(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{11:function(e,t,a){"use strict";a.r(t);var s=a(0),o=a(2);class d extends s.a{static getConfig(){return{className:"Neo.main.addon.MapboxGL",dataMap:{},downloadPath:"https://api.mapbox.com/mapbox-gl-js/",layers:{},maps:{},mapsToCreate:[],scriptsLoaded_:!1,singleton:!0,sources:{},remote:{app:["addLayers","addSources","autoResize","center","create","setFilter","setLayoutProperty","setPaintProperty","setStyle","updateData","zoom"]},styleMap:{},version:"v1.9.1",zoomMap:{}}}constructor(e){super(e),this.insertMapboxGLScripts()}addLayers(e){const t=this,a=t.maps[e.id];let s;a?e.layers.forEach(e=>{s=e.beforeId,delete e.beforeId,a.addLayer(e,s)}):t.layers[e.id]=Object.assign(t.layers[e.id]||{},e)}addSources(e){const t=this,a=t.maps[e.id];let s;a?e.sources.forEach(e=>{s=e.id,delete e.id,a.addSource(s,e)}):t.sources[e.id]=Object.assign(t.sources[e.id]||{},e)}afterSetScriptsLoaded(e,t){if(e){const e=this;e.mapsToCreate.forEach(t=>{e.create(t)}),e.mapsToCreate=[]}}applyStyleObject(e,t,a){a&&(this.styleMap[a]=t),t.layers.forEach(t=>{Object.entries(t.paint).forEach(([a,s])=>{e.setPaintProperty(t.id,a,s)})})}autoResize(e){const t=this.maps[e.id];t&&setTimeout(()=>{t.resize()},100)}center(e){const t=this.maps[e.id],a={lat:e.lat,lng:e.lng};t&&(e.animate?t.flyTo({center:a}):t.setCenter(a))}create(e){const t=this;if(t.scriptsLoaded){mapboxgl.accessToken=e.accessToken;let a=e.zoom;t.zoomMap[e.id]&&(a=t.zoomMap[e.id].zoom,delete t.zoomMap[e.id]),t.maps[e.id]=new mapboxgl.Map({center:e.center,container:e.id,style:e.mapboxStyle,zoom:a}),t.maps[e.id].on("load",t.onMapLoaded.bind(t,e.id))}else t.mapsToCreate.push(e)}hasMap(e){return!!this.maps[e]}insertMapboxGLScripts(){const e=this,t=e.downloadPath+e.version+"/";Promise.all([o.a.loadScript(t+"mapbox-gl.js"),o.a.loadStylesheet(t+"mapbox-gl.css")]).then(()=>{e.scriptsLoaded=!0})}onMapLoaded(e,t){const a=this;a.sources[e]&&(a.addSources(a.sources[e]),delete a.sources[e]),a.layers[e]&&(a.addLayers(a.layers[e]),delete a.layers[e]),t.target.loaded()?a.onMapReallyLoaded(e,t):t.target.once("idle",a.onMapReallyLoaded.bind(a,e))}onMapReallyLoaded(e,t){const a=this;a.dataMap[e]&&(a.updateData(a.dataMap[e]),delete a.dataMap[e])}setFilter(e){const t=this.maps[e.id];t&&t.setFilter(e.layerId,e.value,e.options||{})}setLayoutProperty(e){const t=this.maps[e.id];t&&t.setLayoutProperty(e.layerId,e.key,e.value,e.options||{})}setPaintProperty(e){const t=this.maps[e.id];t&&t.setPaintProperty(e.layerId,e.key,e.value,e.options||{})}setStyle(e){const t=this;t.scriptsLoaded&&t.hasMap(e.id)&&Neo.isString(e.style)&&(0===e.style.indexOf("mapbox://styles/")&&(e.style=e.style.substring(16)),t.styleMap[e.style]?t.applyStyleObject(t.maps[e.id],t.styleMap[e.style]):fetch(`https://api.mapbox.com/styles/v1/${e.style}?access_token=${e.accessToken}`).then(e=>e.json()).then(a=>t.applyStyleObject(t.maps[e.id],a,e.style)))}updateData(e){const t=this;if(t.scriptsLoaded&&t.hasMap(e.id)){const a=t.maps[e.id].getSource(e.dataSourceId);a&&a.setData(e.data)}else t.dataMap[e.id]=e}zoom(e){const t=this.maps[e.id];t?t.setZoom(e.zoom):this.zoomMap[e.id]=e}}Neo.applyClassConfig(d);let i=Neo.create(d);Neo.applyToGlobalNs(i),t.default=i}}]);