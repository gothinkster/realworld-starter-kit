{
    "classData": [
        {
            "comment": "/**\n * @class Neo.util.VNode\n * @extends Neo.core.Base\n */",
            "meta": {
                "filename": "VNode.mjs",
                "lineno": 3,
                "columnno": 0,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "class",
            "name": "VNode",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.util",
            "longname": "Neo.util.VNode",
            "scope": "static",
            "$longname": "Neo.util.VNode",
            "$kind": "class",
            "id": 2915,
            "neoClassName": "Neo.util.VNode"
        },
        {
            "comment": "/**\n         * @member {String} className='Neo.util.VNode'\n         * @protected\n         */",
            "meta": {
                "filename": "VNode.mjs",
                "lineno": 13,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.util.VNode'",
            "access": "protected",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 2916,
            "neoClassName": "Neo.util.VNode"
        },
        {
            "comment": "/**\n     * Search vnode child nodes by id or opts object for a given vdom tree\n     * @param {Object} vnode\n     * @param {Object|String} opts Either an object containing vdom node attributes or a string based id\n     * @param {Number} [index] Internal flag, do not use it\n     * @param {Object} [parentNode] Internal flag, do not use it\n     * @returns {Object}\n     *     {Number} index\n     *     {String} parentId\n     *     {Object} vnode\n     */",
            "meta": {
                "range": [
                    762,
                    4226
                ],
                "filename": "VNode.mjs",
                "lineno": 27,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100093672",
                    "name": "VNode.findChildVnode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "opts",
                        "index",
                        "parentNode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Search vnode child nodes by id or opts object for a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vnode"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either an object containing vdom node attributes or a string based id",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Internal flag, do not use it",
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "description": "Internal flag, do not use it",
                    "name": "parentNode"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "{Number} index\n    {String} parentId\n    {Object} vnode"
                }
            ],
            "name": "findChildVnode",
            "longname": "VNode.findChildVnode",
            "kind": "function",
            "memberof": "VNode",
            "scope": "static",
            "$longname": "VNode.findChildVnode",
            "$kind": "method",
            "id": 2917,
            "neoClassName": "Neo.util.VNode"
        },
        {
            "comment": "/**\n     * Finds a child vnode inside a vnode tree by a given id\n     * @param {Object} vnode\n     * @param {String|null} id\n     * @returns {Object|null} child vnode or null\n     */",
            "meta": {
                "range": [
                    4419,
                    5009
                ],
                "filename": "VNode.mjs",
                "lineno": 120,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100094022",
                    "name": "VNode.findChildVnodeById",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "id"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Finds a child vnode inside a vnode tree by a given id",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vnode"
                },
                {
                    "type": {
                        "names": [
                            "String",
                            "null"
                        ]
                    },
                    "name": "id"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "null"
                        ]
                    },
                    "description": "child vnode or null"
                }
            ],
            "name": "findChildVnodeById",
            "longname": "VNode.findChildVnodeById",
            "kind": "function",
            "memberof": "VNode",
            "scope": "static",
            "$longname": "VNode.findChildVnodeById",
            "$kind": "method",
            "id": 2918,
            "neoClassName": "Neo.util.VNode"
        },
        {
            "comment": "/**\n     * Get the ids of all child nodes of the given vnode\n     * @param vnode\n     * @param [childIds=[]]\n     * @returns {Array} childIds\n     */",
            "meta": {
                "range": [
                    5169,
                    5509
                ],
                "filename": "VNode.mjs",
                "lineno": 153,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100094093",
                    "name": "VNode.getChildIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "childIds"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Get the ids of all child nodes of the given vnode",
            "params": [
                {
                    "name": "vnode"
                },
                {
                    "optional": true,
                    "defaultvalue": "[]",
                    "name": "childIds"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "childIds"
                }
            ],
            "name": "getChildIds",
            "longname": "VNode.getChildIds",
            "kind": "function",
            "memberof": "VNode",
            "scope": "static",
            "$longname": "VNode.getChildIds",
            "$kind": "method",
            "id": 2919,
            "neoClassName": "Neo.util.VNode"
        },
        {
            "comment": "/**\n     * Removes a child vnode inside a vnode tree by a given id\n     * @param {Object} vnode\n     * @param {String} id\n     * @returns {Boolean} true in case the node was found and removed\n     */",
            "meta": {
                "range": [
                    5719,
                    6369
                ],
                "filename": "VNode.mjs",
                "lineno": 173,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100094143",
                    "name": "VNode.removeChildVnode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "id"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes a child vnode inside a vnode tree by a given id",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vnode"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "id"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the node was found and removed"
                }
            ],
            "name": "removeChildVnode",
            "longname": "VNode.removeChildVnode",
            "kind": "function",
            "memberof": "VNode",
            "scope": "static",
            "$longname": "VNode.removeChildVnode",
            "$kind": "method",
            "id": 2920,
            "neoClassName": "Neo.util.VNode"
        },
        {
            "comment": "/**\n     * Replaces a child vnode inside a vnode tree by a given id\n     * @param {Object} vnode\n     * @param {String} id\n     * @param {Object} newChildVnode\n     * @returns {Boolean} true in case the node was found and replaced\n     */",
            "meta": {
                "range": [
                    6618,
                    7307
                ],
                "filename": "VNode.mjs",
                "lineno": 206,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100094221",
                    "name": "VNode.replaceChildVnode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "id",
                        "newChildVnode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Replaces a child vnode inside a vnode tree by a given id",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vnode"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "id"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "newChildVnode"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the node was found and replaced"
                }
            ],
            "name": "replaceChildVnode",
            "longname": "VNode.replaceChildVnode",
            "kind": "function",
            "memberof": "VNode",
            "scope": "static",
            "$longname": "VNode.replaceChildVnode",
            "$kind": "method",
            "id": 2921,
            "neoClassName": "Neo.util.VNode"
        }
    ]
}