{
    "classData": [
        {
            "comment": "/**\n * @class Neo.util.VDom\n * @extends Neo.core.Base\n */",
            "meta": {
                "filename": "VDom.mjs",
                "lineno": 3,
                "columnno": 0,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "class",
            "name": "VDom",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.util",
            "longname": "Neo.util.VDom",
            "scope": "static",
            "$longname": "Neo.util.VDom",
            "$kind": "class",
            "id": 2057,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n         * @member {String} className='Neo.util.VDom'\n         * @protected\n         */",
            "meta": {
                "filename": "VDom.mjs",
                "lineno": 13,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.util.VDom'",
            "access": "protected",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 2058,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Search vdom child nodes by id or opts object for a given vdom tree\n     * @param {Object} vdom\n     * @param {Object|String} opts Either an object containing vdom node attributes or a string based id\n     * @param {Number} [index] Internal flag, do not use it\n     * @param {Object} [parentNode] Internal flag, do not use it\n     * @returns {Object}\n     *     {Number} index\n     *     {String} parentId\n     *     {Object} vdom\n     */",
            "meta": {
                "range": [
                    755,
                    4235
                ],
                "filename": "VDom.mjs",
                "lineno": 27,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100064969",
                    "name": "VDom.findVdomChild",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "opts",
                        "index",
                        "parentNode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Search vdom child nodes by id or opts object for a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either an object containing vdom node attributes or a string based id",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Internal flag, do not use it",
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "description": "Internal flag, do not use it",
                    "name": "parentNode"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "{Number} index\n    {String} parentId\n    {Object} vdom"
                }
            ],
            "name": "findVdomChild",
            "longname": "VDom.findVdomChild",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.findVdomChild",
            "$kind": "method",
            "id": 2059,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Convenience shortcut for findVdomChild(vdom, {flag: flag});\n     * @param {Object} vdom\n     * @param {String} flag The flag reference specified on the target vdom child node\n     * @returns {Object} vdom\n     */",
            "meta": {
                "range": [
                    4469,
                    4598
                ],
                "filename": "VDom.mjs",
                "lineno": 120,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065311",
                    "name": "VDom.getByFlag",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "flag"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Convenience shortcut for findVdomChild(vdom, {flag: flag});",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The flag reference specified on the target vdom child node",
                    "name": "flag"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "vdom"
                }
            ],
            "name": "getByFlag",
            "longname": "VDom.getByFlag",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getByFlag",
            "$kind": "method",
            "id": 2060,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Get the ids of all child nodes of the given vdom tree\n     * @param vdom\n     * @param [childIds=[]]\n     * @returns {Array} childIds\n     */",
            "meta": {
                "range": [
                    4761,
                    5089
                ],
                "filename": "VDom.mjs",
                "lineno": 131,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065334",
                    "name": "VDom.getChildIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "childIds"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Get the ids of all child nodes of the given vdom tree",
            "params": [
                {
                    "name": "vdom"
                },
                {
                    "optional": true,
                    "defaultvalue": "[]",
                    "name": "childIds"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "childIds"
                }
            ],
            "name": "getChildIds",
            "longname": "VDom.getChildIds",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getChildIds",
            "$kind": "method",
            "id": 2061,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} vdom\n     * @param {Number} index\n     * @returns {Array}\n     */",
            "meta": {
                "range": [
                    5199,
                    5505
                ],
                "filename": "VDom.mjs",
                "lineno": 151,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065384",
                    "name": "VDom.getColumnNodes",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "getColumnNodes",
            "longname": "VDom.getColumnNodes",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getColumnNodes",
            "$kind": "method",
            "id": 2062,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} vdom\n     * @param {Number} index\n     * @returns {Array}\n     */",
            "meta": {
                "range": [
                    5615,
                    5724
                ],
                "filename": "VDom.mjs",
                "lineno": 171,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065432",
                    "name": "VDom.getColumnNodesIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "getColumnNodesIds",
            "longname": "VDom.getColumnNodesIds",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getColumnNodesIds",
            "$kind": "method",
            "id": 2063,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} vdom\n     * @param {String} flag\n     * @param {Array} [matchArray]\n     * @return {Array} an array of vdom nodes which match the flag\n     */",
            "meta": {
                "range": [
                    5911,
                    6421
                ],
                "filename": "VDom.mjs",
                "lineno": 182,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065453",
                    "name": "VDom.getFlags",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "flag",
                        "matchArray"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "flag"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "name": "matchArray"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "an array of vdom nodes which match the flag"
                }
            ],
            "name": "getFlags",
            "longname": "VDom.getFlags",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.getFlags",
            "$kind": "method",
            "id": 2064,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Insert a given nodeToInsert after a targetNode inside a given vdom tree\n     * @param {Object} vdom The vdom tree containing the targetNode\n     * @param {Object} nodeToInsert The new vdom to insert\n     * @param {Object|String} targetNodeId Either a vdom node or a vdom node id\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    6755,
                    6892
                ],
                "filename": "VDom.mjs",
                "lineno": 211,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065524",
                    "name": "VDom.insertAfterNode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "nodeToInsert",
                        "targetNodeId"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Insert a given nodeToInsert after a targetNode inside a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The vdom tree containing the targetNode",
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The new vdom to insert",
                    "name": "nodeToInsert"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either a vdom node or a vdom node id",
                    "name": "targetNodeId"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "insertAfterNode",
            "longname": "VDom.insertAfterNode",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.insertAfterNode",
            "$kind": "method",
            "id": 2065,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Insert a given nodeToInsert before a targetNode inside a given vdom tree\n     * @param {Object} vdom The vdom tree containing the targetNode\n     * @param {Object} nodeToInsert The new vdom to insert\n     * @param {Object|String} targetNodeId Either a vdom node or a vdom node id\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    7227,
                    7364
                ],
                "filename": "VDom.mjs",
                "lineno": 222,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065540",
                    "name": "VDom.insertBeforeNode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "nodeToInsert",
                        "targetNodeId"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Insert a given nodeToInsert before a targetNode inside a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The vdom tree containing the targetNode",
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The new vdom to insert",
                    "name": "nodeToInsert"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either a vdom node or a vdom node id",
                    "name": "targetNodeId"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "insertBeforeNode",
            "longname": "VDom.insertBeforeNode",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.insertBeforeNode",
            "$kind": "method",
            "id": 2066,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Insert a given nodeToInsert before a targetNode inside a given vdom tree\n     * @param {Object} vdom The vdom tree containing the targetNode\n     * @param {Object} nodeToInsert The new vdom to insert\n     * @param {Object|String} targetNodeId Either a vdom node or a vdom node id\n     * @param {Boolean} insertBefore true inserts the new node at the same index, index+1 otherwise\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    7799,
                    8289
                ],
                "filename": "VDom.mjs",
                "lineno": 234,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065556",
                    "name": "VDom.insertNode",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "nodeToInsert",
                        "targetNodeId",
                        "insertBefore"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Insert a given nodeToInsert before a targetNode inside a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The vdom tree containing the targetNode",
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The new vdom to insert",
                    "name": "nodeToInsert"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either a vdom node or a vdom node id",
                    "name": "targetNodeId"
                },
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true inserts the new node at the same index, index+1 otherwise",
                    "name": "insertBefore"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "insertNode",
            "longname": "VDom.insertNode",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.insertNode",
            "$kind": "method",
            "id": 2067,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Search vdom child nodes by id or opts object for a given vdom tree\n     * @param {Object} [vdom]\n     * @param {Object|String} opts Either an object containing vdom node attributes or a string based id\n     * @returns {Boolean} true in case the node was found & removed\n     */",
            "meta": {
                "range": [
                    8588,
                    8818
                ],
                "filename": "VDom.mjs",
                "lineno": 257,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065622",
                    "name": "VDom.removeVdomChild",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Search vdom child nodes by id or opts object for a given vdom tree",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "description": "Either an object containing vdom node attributes or a string based id",
                    "name": "opts"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the node was found & removed"
                }
            ],
            "name": "removeVdomChild",
            "longname": "VDom.removeVdomChild",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.removeVdomChild",
            "$kind": "method",
            "id": 2068,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Replaces a child node inside a vdom tree by a given id\n     * @param {Object} vdom\n     * @param {String} id\n     * @param {Object} newChildNode\n     * @returns {Boolean} true in case the node was found and replaced\n     */",
            "meta": {
                "range": [
                    9063,
                    9689
                ],
                "filename": "VDom.mjs",
                "lineno": 275,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065657",
                    "name": "VDom.replaceVdomChild",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vdom",
                        "id",
                        "newChildNode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Replaces a child node inside a vdom tree by a given id",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "id"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "newChildNode"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the node was found and replaced"
                }
            ],
            "name": "replaceVdomChild",
            "longname": "VDom.replaceVdomChild",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.replaceVdomChild",
            "$kind": "method",
            "id": 2069,
            "neoClassName": "Neo.util.VDom"
        },
        {
            "comment": "/**\n     * Neo.vdom.Helper will create ids for each vnode, so we need to sync them into the vdom\n     * @param {Neo.vdom.VNode} vnode\n     * @param {Object} vdom\n     */",
            "meta": {
                "range": [
                    9869,
                    10580
                ],
                "filename": "VDom.mjs",
                "lineno": 306,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100065736",
                    "name": "VDom.syncVdomIds",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "vnode",
                        "vdom"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Neo.vdom.Helper will create ids for each vnode, so we need to sync them into the vdom",
            "params": [
                {
                    "type": {
                        "names": [
                            "Neo.vdom.VNode"
                        ]
                    },
                    "name": "vnode"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "vdom"
                }
            ],
            "name": "syncVdomIds",
            "longname": "VDom.syncVdomIds",
            "kind": "function",
            "memberof": "VDom",
            "scope": "static",
            "$longname": "VDom.syncVdomIds",
            "$kind": "method",
            "id": 2070,
            "neoClassName": "Neo.util.VDom"
        }
    ]
}