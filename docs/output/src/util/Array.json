{
    "classData": [
        {
            "comment": "/**\n * @class Neo.util.Array\n * @extends Neo.core.Base\n */",
            "meta": {
                "filename": "Array.mjs",
                "lineno": 3,
                "columnno": 0,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "class",
            "name": "Array",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.util",
            "longname": "Neo.util.Array",
            "scope": "static",
            "$longname": "Neo.util.Array",
            "$kind": "class",
            "id": 2801,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n         * @member {String} className='Neo.util.Array'\n         * @protected\n         */",
            "meta": {
                "filename": "Array.mjs",
                "lineno": 13,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.util.Array'",
            "access": "protected",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 2802,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Adds an item or Array of items to an array in case it does not already exist.\n     * Only primitive items will get found as duplicates\n     * @param {Array} arr\n     * @param {*} items\n     */",
            "meta": {
                "range": [
                    517,
                    753
                ],
                "filename": "Array.mjs",
                "lineno": 22,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089452",
                    "name": "NeoArray.add",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "items"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds an item or Array of items to an array in case it does not already exist.<br />Only primitive items will get found as duplicates",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "items"
                }
            ],
            "name": "add",
            "longname": "NeoArray.add",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.add",
            "$kind": "method",
            "id": 2803,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Returns an array of items which are present in array1, but not in array2\n     * @param {Array} array1=[]\n     * @param {Array} array2=[]\n     * @returns {Array}\n     */",
            "meta": {
                "range": [
                    943,
                    1052
                ],
                "filename": "Array.mjs",
                "lineno": 40,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089493",
                    "name": "NeoArray.difference",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "array1",
                        "array2"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns an array of items which are present in array1, but not in array2",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "defaultvalue": "[",
                    "name": "array1"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "defaultvalue": "[",
                    "name": "array2"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "difference",
            "longname": "NeoArray.difference",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.difference",
            "$kind": "method",
            "id": 2804,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Checks if the item is included by reference inside the array\n     * @param {Array} arr\n     * @param {*} item\n     */",
            "meta": {
                "range": [
                    1191,
                    1259
                ],
                "filename": "Array.mjs",
                "lineno": 49,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089516",
                    "name": "NeoArray.hasItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Checks if the item is included by reference inside the array",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "item"
                }
            ],
            "name": "hasItem",
            "longname": "NeoArray.hasItem",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.hasItem",
            "$kind": "method",
            "id": 2805,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Returns an array of items which are present in array1 and array2\n     * Only supports primitive items\n     * @param {Array} array1=[]\n     * @param {Array} array2=[]\n     * @returns {Array}\n     */",
            "meta": {
                "range": [
                    1478,
                    1588
                ],
                "filename": "Array.mjs",
                "lineno": 60,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089528",
                    "name": "NeoArray.intersection",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "array1",
                        "array2"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns an array of items which are present in array1 and array2<br />Only supports primitive items",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "defaultvalue": "[",
                    "name": "array1"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "defaultvalue": "[",
                    "name": "array2"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "intersection",
            "longname": "NeoArray.intersection",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.intersection",
            "$kind": "method",
            "id": 2806,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Returns true if all items of array1 are present in array 2\n     * Supports Arrays containing Objects, not Arrays containing Arrays\n     * @param {Array} array1=[]\n     * @param {Array} array2=[]\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    1838,
                    2677
                ],
                "filename": "Array.mjs",
                "lineno": 71,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089550",
                    "name": "NeoArray.isEqual",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "array1",
                        "array2"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if all items of array1 are present in array 2<br />Supports Arrays containing Objects, not Arrays containing Arrays",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "defaultvalue": "[",
                    "name": "array1"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "defaultvalue": "[",
                    "name": "array2"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isEqual",
            "longname": "NeoArray.isEqual",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.isEqual",
            "$kind": "method",
            "id": 2807,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Moves an item inside arr from fromIndex to toIndex\n     * @param {Array} arr\n     * @param {Number} fromIndex\n     * @param {Number} toIndex\n     */",
            "meta": {
                "range": [
                    2847,
                    3134
                ],
                "filename": "Array.mjs",
                "lineno": 110,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089666",
                    "name": "NeoArray.move",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "fromIndex",
                        "toIndex"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Moves an item inside arr from fromIndex to toIndex",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "fromIndex"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "toIndex"
                }
            ],
            "name": "move",
            "longname": "NeoArray.move",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.move",
            "$kind": "method",
            "id": 2808,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Removes an item or array of items from an array. Only primitive items will get found\n     * @param {Array} arr\n     * @param {*} items\n     */",
            "meta": {
                "range": [
                    3298,
                    3594
                ],
                "filename": "Array.mjs",
                "lineno": 128,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089712",
                    "name": "NeoArray.remove",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "items"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes an item or array of items from an array. Only primitive items will get found",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "items"
                }
            ],
            "name": "remove",
            "longname": "NeoArray.remove",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.remove",
            "$kind": "method",
            "id": 2809,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Convenience method to combine add & remove in one call.\n     * You can pass single items or an array of items to add or to remove.\n     * @param {Array} arr\n     * @param {*} removeItems\n     * @param {*} addItems\n     */",
            "meta": {
                "range": [
                    3837,
                    3961
                ],
                "filename": "Array.mjs",
                "lineno": 151,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089763",
                    "name": "NeoArray.removeAdd",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "removeItems",
                        "addItems"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Convenience method to combine add & remove in one call.<br />You can pass single items or an array of items to add or to remove.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "removeItems"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "addItems"
                }
            ],
            "name": "removeAdd",
            "longname": "NeoArray.removeAdd",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.removeAdd",
            "$kind": "method",
            "id": 2810,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Removes an item from an array in case it does exist, otherwise adds it\n     * @param {Array} arr\n     * @param {*} item\n     */",
            "meta": {
                "range": [
                    4110,
                    4211
                ],
                "filename": "Array.mjs",
                "lineno": 161,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089784",
                    "name": "NeoArray.toggle",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes an item from an array in case it does exist, otherwise adds it",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "item"
                }
            ],
            "name": "toggle",
            "longname": "NeoArray.toggle",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.toggle",
            "$kind": "method",
            "id": 2811,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Returns an array of items which are present in array1 and array2\n     * Only supports primitive items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @returns {Array}\n     */",
            "meta": {
                "range": [
                    4424,
                    4818
                ],
                "filename": "Array.mjs",
                "lineno": 172,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089805",
                    "name": "NeoArray.union",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "array1",
                        "array2"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns an array of items which are present in array1 and array2<br />Only supports primitive items",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "array1"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "array2"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "name": "union",
            "longname": "NeoArray.union",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.union",
            "$kind": "method",
            "id": 2812,
            "neoClassName": "Neo.util.Array"
        },
        {
            "comment": "/**\n     * Adds an item or Array of items to an array in case it does not already exist.\n     * Only primitive items will get found as duplicates\n     * @param {Array} arr\n     * @param {*} items\n     */",
            "meta": {
                "range": [
                    5032,
                    5275
                ],
                "filename": "Array.mjs",
                "lineno": 197,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100089862",
                    "name": "NeoArray.unshift",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "arr",
                        "items"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds an item or Array of items to an array in case it does not already exist.<br />Only primitive items will get found as duplicates",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "arr"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "items"
                }
            ],
            "name": "unshift",
            "longname": "NeoArray.unshift",
            "kind": "function",
            "memberof": "NeoArray",
            "scope": "static",
            "$longname": "NeoArray.unshift",
            "$kind": "method",
            "id": 2813,
            "neoClassName": "Neo.util.Array"
        }
    ]
}