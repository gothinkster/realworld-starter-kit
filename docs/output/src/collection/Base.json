{
    "classData": [
        {
            "comment": "/**\n * @class Neo.collection.Base\n * @extends Neo.core.Base\n */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 16,
                "columnno": 0,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "kind": "class",
            "name": "Base",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.collection",
            "longname": "Neo.collection.Base",
            "scope": "static",
            "$longname": "Neo.collection.Base",
            "$kind": "class",
            "id": 362,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * True automatically applies the core/Observable.mjs mixin\n         * @member {Boolean} observable=true\n         * @static\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 27,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "True automatically applies the core/Observable.mjs mixin",
            "kind": "member",
            "name": "observable",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": true,
            "scope": "static",
            "longname": "observable",
            "$longname": "observable",
            "$kind": "property",
            "id": 363,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * @member {String} className='Neo.collection.Base'\n         * @protected\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 35,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.collection.Base'",
            "access": "protected",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 364,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * @member {String} ntype='collection'\n         * @protected\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 40,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "kind": "member",
            "name": "ntype",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'collection'",
            "access": "protected",
            "longname": "ntype",
            "scope": "global",
            "$longname": "ntype",
            "$kind": "property",
            "id": 365,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * When filtering the collection for the first time, allItems will become a new collection for the unfiltered\n         * state, using this id as the sourceCollectionId\n         * @member {Neo.collection.Base|null} allItems\n         * @protected\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 47,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "When filtering the collection for the first time, allItems will become a new collection for the unfiltered<br />state, using this id as the sourceCollectionId",
            "kind": "member",
            "name": "allItems",
            "type": {
                "names": [
                    "Neo.collection.Base",
                    "null"
                ]
            },
            "access": "protected",
            "longname": "allItems",
            "scope": "global",
            "$longname": "allItems",
            "$kind": "property",
            "id": 366,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * True to sort the collection items when adding / inserting new ones\n         * @member {Boolean} autoSort\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 52,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "True to sort the collection items when adding / inserting new ones",
            "kind": "member",
            "name": "autoSort",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "longname": "autoSort",
            "scope": "global",
            "$longname": "autoSort",
            "$kind": "property",
            "id": 367,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * Use 'primitive' for default filters, use 'advanced' for filters using a filterBy method\n         * which need to iterate over other collection items\n         * @member {String} filterMode='primitive'\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 58,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "Use 'primitive' for default filters, use 'advanced' for filters using a filterBy method<br />which need to iterate over other collection items",
            "kind": "member",
            "name": "filterMode",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'primitive'",
            "longname": "filterMode",
            "scope": "global",
            "$longname": "filterMode",
            "$kind": "property",
            "id": 368,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * An Array containing Neo.util.Filter config objects or instances\n         * @member {Array} filters_=[]\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 63,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "An Array containing Neo.util.Filter config objects or instances",
            "kind": "member",
            "name": "filters_",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": "[]",
            "longname": "filters_",
            "scope": "global",
            "$longname": "filters_",
            "$kind": "property",
            "id": 369,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * The unique(!) key property of each collection item\n         * @member {Array} items_=[]\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 68,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "The unique(!) key property of each collection item",
            "kind": "member",
            "name": "items_",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": "[]",
            "longname": "items_",
            "scope": "global",
            "$longname": "items_",
            "$kind": "property",
            "id": 370,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * The unique(!) key property of each collection item\n         * @member {string} keyProperty='id'\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 73,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "The unique(!) key property of each collection item",
            "kind": "member",
            "name": "keyProperty",
            "type": {
                "names": [
                    "string"
                ]
            },
            "defaultvalue": "'id'",
            "longname": "keyProperty",
            "scope": "global",
            "$longname": "keyProperty",
            "$kind": "property",
            "id": 371,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * A map containing the key & reference of each collection item for faster access\n         * @member {Map} map_=null\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 78,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "A map containing the key & reference of each collection item for faster access",
            "kind": "member",
            "name": "map_",
            "type": {
                "names": [
                    "Map"
                ]
            },
            "defaultvalue": null,
            "longname": "map_",
            "scope": "global",
            "$longname": "map_",
            "$kind": "property",
            "id": 372,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * An internal Array of the sort directions for faster access\n         * @member {Array} sortDirections=null\n         * @protected\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 84,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "An internal Array of the sort directions for faster access",
            "kind": "member",
            "name": "sortDirections",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": null,
            "access": "protected",
            "longname": "sortDirections",
            "scope": "global",
            "$longname": "sortDirections",
            "$kind": "property",
            "id": 373,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * An internal Array of the sort properties for faster access\n         * @member {Array} sortProperties=null\n         * @protected\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 90,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "An internal Array of the sort properties for faster access",
            "kind": "member",
            "name": "sortProperties",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": null,
            "access": "protected",
            "longname": "sortProperties",
            "scope": "global",
            "$longname": "sortProperties",
            "$kind": "property",
            "id": 374,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * An Array containing Neo.util.Sorter config objects or instances\n         * @member {Array} sorters_=[]\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 95,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "An Array containing Neo.util.Sorter config objects or instances",
            "kind": "member",
            "name": "sorters_",
            "type": {
                "names": [
                    "Array"
                ]
            },
            "defaultvalue": "[]",
            "longname": "sorters_",
            "scope": "global",
            "$longname": "sorters_",
            "$kind": "property",
            "id": 375,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n         * The id of another collection instance to use as this data source\n         * @member {String|null} sourceId_=null\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 100,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "The id of another collection instance to use as this data source",
            "kind": "member",
            "name": "sourceId_",
            "type": {
                "names": [
                    "String",
                    "null"
                ]
            },
            "defaultvalue": null,
            "longname": "sourceId_",
            "scope": "global",
            "$longname": "sourceId_",
            "$kind": "property",
            "id": 376,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param config\n     */",
            "meta": {
                "range": [
                    3365,
                    4097
                ],
                "filename": "Base.mjs",
                "lineno": 107,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012230",
                    "name": "Base",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "name": "config"
                }
            ],
            "name": "Base",
            "longname": "Base",
            "kind": "class",
            "scope": "global",
            "$longname": "Base",
            "$kind": "constructor",
            "id": 377,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Adds one or more items to the end of the collection and returns the new length of the collection.\n     * @param {Array|Object} item The item(s) to add\n     * @returns {Number} the collection count\n     */",
            "meta": {
                "range": [
                    4323,
                    4408
                ],
                "filename": "Base.mjs",
                "lineno": 133,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012317",
                    "name": "Base#add",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds one or more items to the end of the collection and returns the new length of the collection.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "description": "The item(s) to add",
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "add",
            "longname": "Base#add",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#add",
            "$kind": "method",
            "id": 378,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    4514,
                    4857
                ],
                "filename": "Base.mjs",
                "lineno": 144,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012335",
                    "name": "Base#afterSetFilters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "afterSetFilters",
            "longname": "Base#afterSetFilters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetFilters",
            "$kind": "method",
            "id": 379,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    4963,
                    5282
                ],
                "filename": "Base.mjs",
                "lineno": 165,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012384",
                    "name": "Base#afterSetItems",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "afterSetItems",
            "longname": "Base#afterSetItems",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetItems",
            "$kind": "method",
            "id": 380,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    5388,
                    5780
                ],
                "filename": "Base.mjs",
                "lineno": 184,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012433",
                    "name": "Base#afterSetSorters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "afterSetSorters",
            "longname": "Base#afterSetSorters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetSorters",
            "$kind": "method",
            "id": 381,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Number|String} value\n     * @param {Number|String} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    5902,
                    6579
                ],
                "filename": "Base.mjs",
                "lineno": 207,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012491",
                    "name": "Base#afterSetSourceId",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "afterSetSourceId",
            "longname": "Base#afterSetSourceId",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#afterSetSourceId",
            "$kind": "method",
            "id": 382,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Saves the sort property & direction multiplier of each sorter inside 2 arrays for faster access when sorting\n     * @protected\n     */",
            "meta": {
                "range": [
                    6735,
                    7053
                ],
                "filename": "Base.mjs",
                "lineno": 235,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012564",
                    "name": "Base#applySorterConfigs",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Saves the sort property & direction multiplier of each sorter inside 2 arrays for faster access when sorting",
            "access": "protected",
            "name": "applySorterConfigs",
            "longname": "Base#applySorterConfigs",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#applySorterConfigs",
            "$kind": "method",
            "id": 383,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Map|null} value\n     * @param {Map|null} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    7165,
                    7245
                ],
                "filename": "Base.mjs",
                "lineno": 253,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012614",
                    "name": "Base#beforeSetMap",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Map",
                            "null"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Map",
                            "null"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "beforeSetMap",
            "longname": "Base#beforeSetMap",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetMap",
            "$kind": "method",
            "id": 384,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    7351,
                    8853
                ],
                "filename": "Base.mjs",
                "lineno": 263,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012627",
                    "name": "Base#beforeSetFilters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "beforeSetFilters",
            "longname": "Base#beforeSetFilters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetFilters",
            "$kind": "method",
            "id": 385,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Array} value\n     * @param {Array} oldValue\n     * @protected\n     */",
            "meta": {
                "range": [
                    8959,
                    10274
                ],
                "filename": "Base.mjs",
                "lineno": 321,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012816",
                    "name": "Base#beforeSetSorters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "access": "protected",
            "name": "beforeSetSorters",
            "longname": "Base#beforeSetSorters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetSorters",
            "$kind": "method",
            "id": 386,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param opts\n     * @protected\n     */",
            "meta": {
                "range": [
                    10340,
                    11399
                ],
                "filename": "Base.mjs",
                "lineno": 373,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100012989",
                    "name": "Base#cacheUpdate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "name": "opts"
                }
            ],
            "access": "protected",
            "name": "cacheUpdate",
            "longname": "Base#cacheUpdate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#cacheUpdate",
            "$kind": "method",
            "id": 387,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Removes all items and clears the map\n     */",
            "meta": {
                "range": [
                    11465,
                    11572
                ],
                "filename": "Base.mjs",
                "lineno": 405,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013158",
                    "name": "Base#clear",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes all items and clears the map",
            "name": "clear",
            "longname": "Base#clear",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#clear",
            "$kind": "method",
            "id": 388,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Clears all current filters and optionally restores the original ones in case they existed.\n     * @param {boolean} [restoreOriginalFilters=false]\n     */",
            "meta": {
                "range": [
                    11747,
                    11898
                ],
                "filename": "Base.mjs",
                "lineno": 416,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013185",
                    "name": "Base#clearFilters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "restoreOriginalFilters"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Clears all current filters and optionally restores the original ones in case they existed.",
            "params": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": false,
                    "name": "restoreOriginalFilters"
                }
            ],
            "name": "clearFilters",
            "longname": "Base#clearFilters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#clearFilters",
            "$kind": "method",
            "id": 389,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Clears all current sorters and optionally restores the original ones in case they existed.\n     * Without restoreInitialState as true this will not affect the current sorting of this collection.\n     * @param {boolean} [restoreOriginalSorters=false]\n     */",
            "meta": {
                "range": [
                    12177,
                    12328
                ],
                "filename": "Base.mjs",
                "lineno": 425,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013209",
                    "name": "Base#clearSorters",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "restoreOriginalSorters"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Clears all current sorters and optionally restores the original ones in case they existed.<br />Without restoreInitialState as true this will not affect the current sorting of this collection.",
            "params": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": false,
                    "name": "restoreOriginalSorters"
                }
            ],
            "name": "clearSorters",
            "longname": "Base#clearSorters",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#clearSorters",
            "$kind": "method",
            "id": 390,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @returns {Neo.collection.Base} The cloned collection\n     */",
            "meta": {
                "range": [
                    12417,
                    13226
                ],
                "filename": "Base.mjs",
                "lineno": 433,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013233",
                    "name": "Base#clone",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.collection.Base"
                        ]
                    },
                    "description": "The cloned collection"
                }
            ],
            "name": "clone",
            "longname": "Base#clone",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#clone",
            "$kind": "method",
            "id": 391,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Clears the map & items array before the super call\n     */",
            "meta": {
                "range": [
                    13306,
                    13443
                ],
                "filename": "Base.mjs",
                "lineno": 467,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013359",
                    "name": "Base#destroy",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Clears the map & items array before the super call",
            "name": "destroy",
            "longname": "Base#destroy",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#destroy",
            "$kind": "method",
            "id": 392,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * @protected\n     */",
            "meta": {
                "range": [
                    13483,
                    16493
                ],
                "filename": "Base.mjs",
                "lineno": 479,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013392",
                    "name": "Base#doSort",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "access": "protected",
            "name": "doSort",
            "longname": "Base#doSort",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#doSort",
            "$kind": "method",
            "id": 393,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Resumes the collection events.\n     * If you started an update using the startSilentUpdateMode flag,\n     * you must use the endSilentUpdateMode param for this call.\n     * Using the endSilentUpdateMode param will not fire a mutation event.\n     * @param {Boolean} [endSilentUpdateMode]\n     * @see {@link Neo.collection.Base#startUpdate startUpdate}\n     */",
            "meta": {
                "range": [
                    16873,
                    17399
                ],
                "filename": "Base.mjs",
                "lineno": 578,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013708",
                    "name": "Base#endUpdate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "endSilentUpdateMode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Resumes the collection events.<br />If you started an update using the startSilentUpdateMode flag,<br />you must use the endSilentUpdateMode param for this call.<br />Using the endSilentUpdateMode param will not fire a mutation event.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "optional": true,
                    "name": "endSilentUpdateMode"
                }
            ],
            "see": [
                "{@link Neo.collection.Base#startUpdate startUpdate}"
            ],
            "name": "endUpdate",
            "longname": "Base#endUpdate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#endUpdate",
            "$kind": "method",
            "id": 394,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * @protected\n     */",
            "meta": {
                "range": [
                    17439,
                    20219
                ],
                "filename": "Base.mjs",
                "lineno": 601,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100013780",
                    "name": "Base#filter",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "access": "protected",
            "name": "filter",
            "longname": "Base#filter",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#filter",
            "$kind": "method",
            "id": 395,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns all items which match the property and value\n     * @param {Object|String} property\n     * @param {String|Number} value\n     * @returns {Array} Returns an empty Array in case no items are found\n     */",
            "meta": {
                "range": [
                    20450,
                    21387
                ],
                "filename": "Base.mjs",
                "lineno": 694,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014125",
                    "name": "Base#find",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "property",
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns all items which match the property and value",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "String"
                        ]
                    },
                    "name": "property"
                },
                {
                    "type": {
                        "names": [
                            "String",
                            "Number"
                        ]
                    },
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "Returns an empty Array in case no items are found"
                }
            ],
            "name": "find",
            "longname": "Base#find",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#find",
            "$kind": "method",
            "id": 396,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns all items in the collection for which the passed function returns true\n     * @param {function} fn The function to run for each item inside the start-end range. Return true for a match.\n     * @param {Object} fn.item The current collection item\n     * @param {Object} [scope=this] The scope in which the passed function gets executed\n     * @param {Number} [start=0] The start index\n     * @param {Number} [end=this.getCount()] The end index (up to, last value excluded)\n     * @returns {Array} Returns an empty Array in case no items are found\n     */",
            "meta": {
                "range": [
                    21969,
                    22329
                ],
                "filename": "Base.mjs",
                "lineno": 736,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014234",
                    "name": "Base#findBy",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "fn",
                        "scope",
                        "start",
                        "end"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns all items in the collection for which the passed function returns true",
            "params": [
                {
                    "type": {
                        "names": [
                            "function"
                        ]
                    },
                    "description": "The function to run for each item inside the start-end range. Return true for a match.",
                    "name": "fn"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The current collection item",
                    "name": "fn.item"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": "this",
                    "description": "The scope in which the passed function gets executed",
                    "name": "scope"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": 0,
                    "description": "The start index",
                    "name": "start"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": "this.getCount()",
                    "description": "The end index (up to, last value excluded)",
                    "name": "end"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "Returns an empty Array in case no items are found"
                }
            ],
            "name": "findBy",
            "longname": "Base#findBy",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#findBy",
            "$kind": "method",
            "id": 397,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the first item inside the collection\n     * @returns {Object}\n     */",
            "meta": {
                "range": [
                    22428,
                    22474
                ],
                "filename": "Base.mjs",
                "lineno": 757,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014299",
                    "name": "Base#first",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the first item inside the collection",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    }
                }
            ],
            "name": "first",
            "longname": "Base#first",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#first",
            "$kind": "method",
            "id": 398,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the object associated to the key, or undefined if there is none.\n     * @param key\n     * @returns {Object|undefined}\n     */",
            "meta": {
                "range": [
                    22629,
                    22679
                ],
                "filename": "Base.mjs",
                "lineno": 766,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014309",
                    "name": "Base#get",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the object associated to the key, or undefined if there is none.",
            "params": [
                {
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "get",
            "longname": "Base#get",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#get",
            "$kind": "method",
            "id": 399,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the item for a given index\n     * @param {Number} index\n     * @returns {Object|undefined}\n     */",
            "meta": {
                "range": [
                    22807,
                    22862
                ],
                "filename": "Base.mjs",
                "lineno": 775,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014322",
                    "name": "Base#getAt",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the item for a given index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "getAt",
            "longname": "Base#getAt",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getAt",
            "$kind": "method",
            "id": 400,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the length of the internal items array\n     * @returns {Number}\n     */",
            "meta": {
                "range": [
                    22963,
                    23016
                ],
                "filename": "Base.mjs",
                "lineno": 783,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014333",
                    "name": "Base#getCount",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the length of the internal items array",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    }
                }
            ],
            "name": "getCount",
            "longname": "Base#getCount",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#getCount",
            "$kind": "method",
            "id": 401,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @returns {Number}\n     */",
            "meta": {
                "range": [
                    23070,
                    23134
                ],
                "filename": "Base.mjs",
                "lineno": 791,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014343",
                    "name": "Base#getCountMutations",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    }
                }
            ],
            "name": "getCountMutations",
            "longname": "Base#getCountMutations",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#getCountMutations",
            "$kind": "method",
            "id": 402,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the first matching filter for the given property config\n     * @param {String} property\n     * @returns {Neo.collection.Filter|null}\n     */",
            "meta": {
                "range": [
                    23304,
                    23601
                ],
                "filename": "Base.mjs",
                "lineno": 800,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014351",
                    "name": "Base#getFilter",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "property"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the first matching filter for the given property config",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "property"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.collection.Filter",
                            "null"
                        ]
                    }
                }
            ],
            "name": "getFilter",
            "longname": "Base#getFilter",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getFilter",
            "$kind": "method",
            "id": 403,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the key for a given index\n     * @param {Number} index\n     * @returns {Number|String|undefined}\n     */",
            "meta": {
                "range": [
                    23735,
                    23844
                ],
                "filename": "Base.mjs",
                "lineno": 819,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014394",
                    "name": "Base#getKeyAt",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the key for a given index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "getKeyAt",
            "longname": "Base#getKeyAt",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getKeyAt",
            "$kind": "method",
            "id": 404,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns a shallow copy of a portion of the items array\n     * @param {Number} [start] Zero-based index at which to begin extraction.\n     * @param {Number} [end] Zero-based index before which to end extraction (extracts up to but not including end).\n     * @returns {Array}\n     * @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n     */",
            "meta": {
                "range": [
                    24253,
                    24327
                ],
                "filename": "Base.mjs",
                "lineno": 831,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014415",
                    "name": "Base#getRange",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "start",
                        "end"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns a shallow copy of a portion of the items array",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Zero-based index at which to begin extraction.",
                    "name": "start"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "Zero-based index before which to end extraction (extracts up to but not including end).",
                    "name": "end"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    }
                }
            ],
            "tags": [
                {
                    "originalTitle": "link",
                    "title": "link",
                    "text": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",
                    "value": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice"
                }
            ],
            "name": "getRange",
            "longname": "Base#getRange",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getRange",
            "$kind": "method",
            "id": 405,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the Source Collection in case the sourceCollectionId config was set\n     * @returns {Neo.collection.Base|undefined}\n     */",
            "meta": {
                "range": [
                    24480,
                    24555
                ],
                "filename": "Base.mjs",
                "lineno": 839,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014430",
                    "name": "Base#getSource",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the Source Collection in case the sourceCollectionId config was set",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.collection.Base",
                            "undefined"
                        ]
                    }
                }
            ],
            "name": "getSource",
            "longname": "Base#getSource",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#getSource",
            "$kind": "method",
            "id": 406,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * Returns a boolean asserting whether a value has been associated to the key in the Collection or not\n     * @param {Number|String} key\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    24751,
                    24801
                ],
                "filename": "Base.mjs",
                "lineno": 849,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014446",
                    "name": "Base#has",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns a boolean asserting whether a value has been associated to the key in the Collection or not",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "has",
            "longname": "Base#has",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#has",
            "$kind": "method",
            "id": 407,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns a boolean asserting whether an item exists in the Collection or not\n     * @param {Object} item\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    24960,
                    25034
                ],
                "filename": "Base.mjs",
                "lineno": 858,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014459",
                    "name": "Base#hasItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns a boolean asserting whether an item exists in the Collection or not",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "hasItem",
            "longname": "Base#hasItem",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#hasItem",
            "$kind": "method",
            "id": 408,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the index for a given key or item\n     * @param {Number|String|Object} key\n     * @returns {Number} index (-1 in case no match is found)\n     */",
            "meta": {
                "range": [
                    25208,
                    25310
                ],
                "filename": "Base.mjs",
                "lineno": 867,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014476",
                    "name": "Base#indexOf",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the index for a given key or item",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String",
                            "Object"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "index (-1 in case no match is found)"
                }
            ],
            "name": "indexOf",
            "longname": "Base#indexOf",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#indexOf",
            "$kind": "method",
            "id": 409,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the index for a given item\n     * @param {Object} item\n     * @returns {Number} index (-1 in case no match is found)\n     */",
            "meta": {
                "range": [
                    25464,
                    25531
                ],
                "filename": "Base.mjs",
                "lineno": 876,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014502",
                    "name": "Base#indexOfItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the index for a given item",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "index (-1 in case no match is found)"
                }
            ],
            "name": "indexOfItem",
            "longname": "Base#indexOfItem",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#indexOfItem",
            "$kind": "method",
            "id": 410,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the index for a given key\n     * @param {Number|String} key\n     * @returns {Number} index (-1 in case no match is found)\n     */",
            "meta": {
                "range": [
                    25690,
                    25768
                ],
                "filename": "Base.mjs",
                "lineno": 885,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014515",
                    "name": "Base#indexOfKey",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the index for a given key",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "index (-1 in case no match is found)"
                }
            ],
            "name": "indexOfKey",
            "longname": "Base#indexOfKey",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#indexOfKey",
            "$kind": "method",
            "id": 411,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Inserts an item or an array of items at the specified index\n     * @param {Number} index\n     * @param {Array|Object} item\n     * @returns {Number} the collection count\n     */",
            "meta": {
                "range": [
                    25966,
                    26062
                ],
                "filename": "Base.mjs",
                "lineno": 895,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014534",
                    "name": "Base#insert",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index",
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Inserts an item or an array of items at the specified index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "insert",
            "longname": "Base#insert",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#insert",
            "$kind": "method",
            "id": 412,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @returns {Boolean} true in case the collection is filtered\n     */",
            "meta": {
                "range": [
                    26157,
                    26210
                ],
                "filename": "Base.mjs",
                "lineno": 904,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014553",
                    "name": "Base#isFiltered",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the collection is filtered"
                }
            ],
            "name": "isFiltered",
            "longname": "Base#isFiltered",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#isFiltered",
            "$kind": "method",
            "id": 413,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} item\n     * @returns {boolean}\n     * @protected\n     */",
            "meta": {
                "range": [
                    26311,
                    26698
                ],
                "filename": "Base.mjs",
                "lineno": 914,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014561",
                    "name": "Base#isFilteredItem",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    }
                }
            ],
            "access": "protected",
            "name": "isFilteredItem",
            "longname": "Base#isFilteredItem",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#isFilteredItem",
            "$kind": "method",
            "id": 414,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @returns {Boolean} true in case the collection is sorted\n     */",
            "meta": {
                "range": [
                    26791,
                    26840
                ],
                "filename": "Base.mjs",
                "lineno": 935,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014609",
                    "name": "Base#isSorted",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the collection is sorted"
                }
            ],
            "name": "isSorted",
            "longname": "Base#isSorted",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#isSorted",
            "$kind": "method",
            "id": 415,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Returns the last item inside the collection\n     * @returns {Object}\n     */",
            "meta": {
                "range": [
                    26938,
                    27000
                ],
                "filename": "Base.mjs",
                "lineno": 943,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014617",
                    "name": "Base#last",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the last item inside the collection",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    }
                }
            ],
            "name": "last",
            "longname": "Base#last",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#last",
            "$kind": "method",
            "id": 416,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} opts\n     * @protected\n     */",
            "meta": {
                "range": [
                    27075,
                    27126
                ],
                "filename": "Base.mjs",
                "lineno": 952,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014632",
                    "name": "Base#onFilterChange",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "access": "protected",
            "name": "onFilterChange",
            "longname": "Base#onFilterChange",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#onFilterChange",
            "$kind": "method",
            "id": 417,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} opts\n     * @protected\n     */",
            "meta": {
                "range": [
                    27201,
                    27459
                ],
                "filename": "Base.mjs",
                "lineno": 961,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014642",
                    "name": "Base#onMutate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "access": "protected",
            "name": "onMutate",
            "longname": "Base#onMutate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#onMutate",
            "$kind": "method",
            "id": 418,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} opts\n     * @protected\n     */",
            "meta": {
                "range": [
                    27534,
                    27620
                ],
                "filename": "Base.mjs",
                "lineno": 978,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014674",
                    "name": "Base#onSorterChange",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "access": "protected",
            "name": "onSorterChange",
            "longname": "Base#onSorterChange",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#onSorterChange",
            "$kind": "method",
            "id": 419,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Removes the last element from the items array and returns this element.\n     * @returns {Object} The removed element from the collection; undefined if the collection is empty.\n     */",
            "meta": {
                "range": [
                    27825,
                    27938
                ],
                "filename": "Base.mjs",
                "lineno": 987,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014689",
                    "name": "Base#pop",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes the last element from the items array and returns this element.",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The removed element from the collection; undefined if the collection is empty."
                }
            ],
            "name": "pop",
            "longname": "Base#pop",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#pop",
            "$kind": "method",
            "id": 420,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Adds one or more items to the end of the collection and returns the new items count\n     * @param {Array|Object} item The item(s) to add\n     * @returns {Number} the collection count\n     */",
            "meta": {
                "range": [
                    28150,
                    28199
                ],
                "filename": "Base.mjs",
                "lineno": 997,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014713",
                    "name": "Base#push",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds one or more items to the end of the collection and returns the new items count",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "description": "The item(s) to add",
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "push",
            "longname": "Base#push",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#push",
            "$kind": "method",
            "id": 421,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Removes a given key, item or Array containing keys|items\n     * @param {Number|String|Object|Array} key\n     * @returns {Number} the collection count\n     */",
            "meta": {
                "range": [
                    28378,
                    28487
                ],
                "filename": "Base.mjs",
                "lineno": 1006,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014724",
                    "name": "Base#remove",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes a given key, item or Array containing keys|items",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "String",
                            "Object",
                            "Array"
                        ]
                    },
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "remove",
            "longname": "Base#remove",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#remove",
            "$kind": "method",
            "id": 422,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Removes the item at the given index\n     * @param {Number} index\n     * @returns {Number} the collection count\n     */",
            "meta": {
                "range": [
                    28627,
                    28713
                ],
                "filename": "Base.mjs",
                "lineno": 1016,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014749",
                    "name": "Base#removeAt",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes the item at the given index",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "name": "index"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "removeAt",
            "longname": "Base#removeAt",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#removeAt",
            "$kind": "method",
            "id": 423,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Reverses the items array in place.\n     * Intended for collections without sorters.\n     * @returns {Array} items\n     */",
            "meta": {
                "range": [
                    28856,
                    28911
                ],
                "filename": "Base.mjs",
                "lineno": 1026,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014766",
                    "name": "Base#reverse",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Reverses the items array in place.<br />Intended for collections without sorters.",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "description": "items"
                }
            ],
            "name": "reverse",
            "longname": "Base#reverse",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#reverse",
            "$kind": "method",
            "id": 424,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Removes the first element from the items array and returns this element.\n     * @returns {Object} The removed element from the collection; undefined if the collection is empty.\n     */",
            "meta": {
                "range": [
                    29117,
                    29213
                ],
                "filename": "Base.mjs",
                "lineno": 1034,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014777",
                    "name": "Base#shift",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes the first element from the items array and returns this element.",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The removed element from the collection; undefined if the collection is empty."
                }
            ],
            "name": "shift",
            "longname": "Base#shift",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#shift",
            "$kind": "method",
            "id": 425,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {function} callback Function to test for each item, taking three parameters:\n     * @param {Object}   callback.item The current collection item being processed\n     * @param {Number}  [callback.index] The index of the current item being processed\n     * @param {Array}   [callback.items] The items array of the collection\n     *\n     * @param {Object} [scope] Value to use as \"this\" when executing the callback\n     * @returns {boolean} true if the callback function returns a truthy value for any collection item, otherwise false\n     */",
            "meta": {
                "range": [
                    29787,
                    29850
                ],
                "filename": "Base.mjs",
                "lineno": 1049,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014796",
                    "name": "Base#some",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "args"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "function"
                        ]
                    },
                    "description": "Function to test for each item, taking three parameters:",
                    "name": "callback"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "The current collection item being processed",
                    "name": "callback.item"
                },
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "optional": true,
                    "description": "The index of the current item being processed",
                    "name": "callback.index"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "description": "The items array of the collection",
                    "name": "callback.items"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "optional": true,
                    "description": "Value to use as \"this\" when executing the callback",
                    "name": "scope"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "boolean"
                        ]
                    },
                    "description": "true if the callback function returns a truthy value for any collection item, otherwise false"
                }
            ],
            "name": "some",
            "longname": "Base#some",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#some",
            "$kind": "method",
            "id": 426,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Removes items from and/or adds items to this collection\n     * If the toRemoveArray is used, then the index is not used for removing, the entries are found by key and removed from where they are.\n     * If index is not passed, toAddArray is appended to the Collection.\n     * @param {Number|null} index\n     * @param {Number|Array} [removeCountOrToRemoveArray]\n     * @param {Array| Object} [toAddArray]\n     * @returns {Object} An object containing the addedItems & removedItems arrays\n     */",
            "meta": {
                "range": [
                    30366,
                    34025
                ],
                "filename": "Base.mjs",
                "lineno": 1062,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100014811",
                    "name": "Base#splice",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "index",
                        "removeCountOrToRemoveArray",
                        "toAddArray"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Removes items from and/or adds items to this collection<br />If the toRemoveArray is used, then the index is not used for removing, the entries are found by key and removed from where they are.<br />If index is not passed, toAddArray is appended to the Collection.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Number",
                            "null"
                        ]
                    },
                    "name": "index"
                },
                {
                    "type": {
                        "names": [
                            "Number",
                            "Array"
                        ]
                    },
                    "optional": true,
                    "name": "removeCountOrToRemoveArray"
                },
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "optional": true,
                    "name": "toAddArray"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "An object containing the addedItems & removedItems arrays"
                }
            ],
            "name": "splice",
            "longname": "Base#splice",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#splice",
            "$kind": "method",
            "id": 427,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Prevents the collection from firing events until endUpdate gets called.\n     * If you start an update using the startSilentUpdateMode param,\n     * the mutation event will not fire after using endUpdate()\n     * (you must use the endSilentUpdateMode param for the endUpdate call in case you used\n     * startSilentUpdateMode here)\n     * @param {Boolean} [startSilentUpdateMode]\n     * @see {@link Neo.collection.Base#endUpdate endUpdate}\n     */",
            "meta": {
                "range": [
                    34493,
                    34657
                ],
                "filename": "Base.mjs",
                "lineno": 1175,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100015286",
                    "name": "Base#startUpdate",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "startSilentUpdateMode"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Prevents the collection from firing events until endUpdate gets called.<br />If you start an update using the startSilentUpdateMode param,<br />the mutation event will not fire after using endUpdate()<br />(you must use the endSilentUpdateMode param for the endUpdate call in case you used<br />startSilentUpdateMode here)",
            "params": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "optional": true,
                    "name": "startSilentUpdateMode"
                }
            ],
            "see": [
                "{@link Neo.collection.Base#endUpdate endUpdate}"
            ],
            "name": "startUpdate",
            "longname": "Base#startUpdate",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#startUpdate",
            "$kind": "method",
            "id": 428,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n     * Adds one or more elements to the beginning of the collection and returns the new items count\n     * @param {Array|Object} item The item(s) to add\n     * @returns {Number} the collection count\n     */",
            "meta": {
                "range": [
                    34878,
                    34964
                ],
                "filename": "Base.mjs",
                "lineno": 1188,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {
                    "id": "astnode100015305",
                    "name": "Base#unshift",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "item"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Adds one or more elements to the beginning of the collection and returns the new items count",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array",
                            "Object"
                        ]
                    },
                    "description": "The item(s) to add",
                    "name": "item"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Number"
                        ]
                    },
                    "description": "the collection count"
                }
            ],
            "name": "unshift",
            "longname": "Base#unshift",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#unshift",
            "$kind": "method",
            "id": 429,
            "neoClassName": "Neo.collection.Base"
        },
        {
            "comment": "/**\n * The mutate event fires after every splice call (invoked by all methods which change the content of the items array).\n * @event mutate\n * @param {Object[]} addedItems\n * @param {Boolean} preventBubbleUp private\n * @param {Object[]} removedItems\n * @returns {Object}\n */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 1194,
                "columnno": 0,
                "path": "/Users/Shared/github/neomjs/neomjs-realworld-example-app/node_modules/neo.mjs/src/collection",
                "code": {}
            },
            "description": "The mutate event fires after every splice call (invoked by all methods which change the content of the items array).",
            "kind": "event",
            "name": "mutate",
            "params": [
                {
                    "type": {
                        "names": [
                            "Array.<Object>"
                        ]
                    },
                    "name": "addedItems"
                },
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "private",
                    "name": "preventBubbleUp"
                },
                {
                    "type": {
                        "names": [
                            "Array.<Object>"
                        ]
                    },
                    "name": "removedItems"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    }
                }
            ],
            "longname": "event:mutate",
            "scope": "global",
            "$longname": "event:mutate",
            "$kind": "event",
            "id": 430,
            "neoClassName": "Neo.collection.Base"
        }
    ]
}