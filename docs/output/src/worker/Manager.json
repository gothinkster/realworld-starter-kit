{
    "classData": [
        {
            "comment": "/**\n * The worker manager lives inside the main thread and creates the App, Data & VDom worker.\n * Also responsible for sending messages from the main thread to the different workers.\n * @class Neo.worker.Manager\n * @extends Neo.core.Base\n * @singleton\n */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 8,
                "columnno": 0,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "description": "The worker manager lives inside the main thread and creates the App, Data & VDom worker.<br />Also responsible for sending messages from the main thread to the different workers.",
            "kind": "class",
            "name": "Manager",
            "augments": [
                "Neo.core.Base"
            ],
            "tags": [
                {
                    "originalTitle": "singleton",
                    "title": "singleton",
                    "text": ""
                }
            ],
            "memberof": "Neo.worker",
            "longname": "Neo.worker.Manager",
            "scope": "static",
            "$longname": "Neo.worker.Manager",
            "$kind": "class",
            "id": 1878,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * @member {String} className='Neo.worker.Manager'\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 21,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.worker.Manager'",
            "access": "private",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 1879,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * @member {String} ntype='worker-manager'\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 26,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "kind": "member",
            "name": "ntype",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'worker-manager'",
            "access": "private",
            "longname": "ntype",
            "scope": "global",
            "$longname": "ntype",
            "$kind": "property",
            "id": 1880,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * @member {boolean} singleton=true\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 31,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "kind": "member",
            "name": "singleton",
            "type": {
                "names": [
                    "boolean"
                ]
            },
            "defaultvalue": true,
            "access": "private",
            "longname": "singleton",
            "scope": "global",
            "$longname": "singleton",
            "$kind": "property",
            "id": 1881,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * The base path for the worker file URLs, can e.g. get set inside the index.html.\n         * @member {String|null} basePath=Neo.config.workerBasePath || 'worker/'\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 37,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "description": "The base path for the worker file URLs, can e.g. get set inside the index.html.",
            "kind": "member",
            "name": "basePath",
            "type": {
                "names": [
                    "String",
                    "null"
                ]
            },
            "defaultvalue": "Neo.config.workerBasePath",
            "access": "private",
            "longname": "basePath",
            "scope": "global",
            "$longname": "basePath",
            "$kind": "property",
            "id": 1882,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * @member {String[]|Neo.core.Base[]|null} mixins=[Observable, RemoteMethodAccess]\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 41,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "kind": "member",
            "name": "mixins",
            "type": {
                "names": [
                    "Array.<String>",
                    "Array.<Neo.core.Base>",
                    "null"
                ]
            },
            "defaultvalue": "[Observable, RemoteMethodAccess]",
            "description": "RemoteMethodAccess]",
            "longname": "mixins",
            "scope": "global",
            "$longname": "mixins",
            "$kind": "property",
            "id": 1883,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * True in case the current browser supports window.SharedWorker.\n         * @member {Boolean} sharedWorkersEnabled=false\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 47,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "description": "True in case the current browser supports window.SharedWorker.",
            "kind": "member",
            "name": "sharedWorkersEnabled",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": false,
            "access": "private",
            "longname": "sharedWorkersEnabled",
            "scope": "global",
            "$longname": "sharedWorkersEnabled",
            "$kind": "property",
            "id": 1884,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * True in case the current browser supports window.Worker.\n         * The Neoteric framework is not able to run without web workers.\n         * @member {Boolean} sharedWorkersEnabled=false\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 54,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "description": "True in case the current browser supports window.Worker.<br />The Neoteric framework is not able to run without web workers.",
            "kind": "member",
            "name": "sharedWorkersEnabled",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": false,
            "access": "private",
            "longname": "sharedWorkersEnabled",
            "scope": "global",
            "$longname": "sharedWorkersEnabled",
            "$kind": "property",
            "id": 1885,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n         * Contains the fileNames for the App, Data & Vdom workers\n         * @member {Object} workers\n         * @private\n         */",
            "meta": {
                "filename": "Manager.mjs",
                "lineno": 60,
                "columnno": 8,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {}
            },
            "description": "Contains the fileNames for the App, Data & Vdom workers",
            "kind": "member",
            "name": "workers",
            "type": {
                "names": [
                    "Object"
                ]
            },
            "access": "private",
            "longname": "workers",
            "scope": "global",
            "$longname": "workers",
            "$kind": "property",
            "id": 1886,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     *\n     * @param {Object} config\n     */",
            "meta": {
                "range": [
                    2561,
                    3741
                ],
                "filename": "Manager.mjs",
                "lineno": 77,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100062922",
                    "name": "Manager",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "config"
                }
            ],
            "name": "Manager",
            "longname": "Manager",
            "kind": "class",
            "scope": "global",
            "$longname": "Manager",
            "$kind": "constructor",
            "id": 1887,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     *\n     */",
            "meta": {
                "range": [
                    3770,
                    4081
                ],
                "filename": "Manager.mjs",
                "lineno": 108,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063041",
                    "name": "Manager#detectFeatures",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "name": "detectFeatures",
            "longname": "Manager#detectFeatures",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "params": [],
            "$longname": "Manager#detectFeatures",
            "$kind": "method",
            "id": 1888,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     *\n     * @param {String|Worker} name\n     * @returns {Worker}\n     */",
            "meta": {
                "range": [
                    4170,
                    4267
                ],
                "filename": "Manager.mjs",
                "lineno": 127,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063076",
                    "name": "Manager#getWorker",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "name"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String",
                            "Worker"
                        ]
                    },
                    "name": "name"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Worker"
                        ]
                    }
                }
            ],
            "name": "getWorker",
            "longname": "Manager#getWorker",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#getWorker",
            "$kind": "method",
            "id": 1889,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     * Calls createWorker for each worker inside the this.workers config.\n     */",
            "meta": {
                "range": [
                    4363,
                    4913
                ],
                "filename": "Manager.mjs",
                "lineno": 134,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063094",
                    "name": "Manager#createWorkers",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Calls createWorker for each worker inside the this.workers config.",
            "name": "createWorkers",
            "longname": "Manager#createWorkers",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "params": [],
            "$longname": "Manager#createWorkers",
            "$kind": "method",
            "id": 1890,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     * Creates a web worker using the passed options as well as adding error & message event listeners.\n     * @param {Object} opts\n     * @returns {Worker}\n     */",
            "meta": {
                "range": [
                    5092,
                    5636
                ],
                "filename": "Manager.mjs",
                "lineno": 159,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063175",
                    "name": "Manager#createWorker",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "opts"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Creates a web worker using the passed options as well as adding error & message event listeners.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "opts"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Worker"
                        ]
                    }
                }
            ],
            "name": "createWorker",
            "longname": "Manager#createWorker",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#createWorker",
            "$kind": "method",
            "id": 1891,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     * Handler method for worker error events\n     * @param {Object} e\n     */",
            "meta": {
                "range": [
                    5729,
                    5925
                ],
                "filename": "Manager.mjs",
                "lineno": 176,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063243",
                    "name": "Manager#onWorkerError",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "e"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Handler method for worker error events",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "e"
                }
            ],
            "name": "onWorkerError",
            "longname": "Manager#onWorkerError",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#onWorkerError",
            "$kind": "method",
            "id": 1892,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     * Handler method for worker message events\n     * @param {Object} e\n     */",
            "meta": {
                "range": [
                    6020,
                    7917
                ],
                "filename": "Manager.mjs",
                "lineno": 186,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063263",
                    "name": "Manager#onWorkerMessage",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "e"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Handler method for worker message events",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "e"
                }
            ],
            "name": "onWorkerMessage",
            "longname": "Manager#onWorkerMessage",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#onWorkerMessage",
            "$kind": "method",
            "id": 1893,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     *\n     * @param {String} path\n     */",
            "meta": {
                "range": [
                    7974,
                    8180
                ],
                "filename": "Manager.mjs",
                "lineno": 255,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063485",
                    "name": "Manager#loadApplication",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "path"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "path"
                }
            ],
            "name": "loadApplication",
            "longname": "Manager#loadApplication",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#loadApplication",
            "$kind": "method",
            "id": 1894,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     * Sends a message to each worker defined inside the this.workers config.\n     * @param msg\n     */",
            "meta": {
                "range": [
                    8298,
                    8428
                ],
                "filename": "Manager.mjs",
                "lineno": 267,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063507",
                    "name": "Manager#broadcast",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "msg"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Sends a message to each worker defined inside the this.workers config.",
            "params": [
                {
                    "name": "msg"
                }
            ],
            "name": "broadcast",
            "longname": "Manager#broadcast",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#broadcast",
            "$kind": "method",
            "id": 1895,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     *\n     * @param {String} dest app, data or vdom\n     * @param {Object} opts configs for Neo.worker.Message\n     * @param {Array} [transfer] An optional array of Transferable objects to transfer ownership of.\n     * If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\n     * and becomes available only to the worker it was sent to.\n     * @returns {Neo.worker.Message}\n     * @private\n     */",
            "meta": {
                "range": [
                    9236,
                    9664
                ],
                "filename": "Manager.mjs",
                "lineno": 296,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063567",
                    "name": "Manager#sendMessage",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "dest",
                        "opts",
                        "transfer"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "app, data or vdom",
                    "name": "dest"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "configs for Neo.worker.Message",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "description": "An optional array of Transferable objects to transfer ownership of.<br />If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from<br />and becomes available only to the worker it was sent to.",
                    "name": "transfer"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Neo.worker.Message"
                        ]
                    }
                }
            ],
            "access": "private",
            "name": "sendMessage",
            "longname": "Manager#sendMessage",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#sendMessage",
            "$kind": "method",
            "id": 1896,
            "neoClassName": "Neo.worker.Manager"
        },
        {
            "comment": "/**\n     *\n     * @param {String} dest app, data or vdom\n     * @param {Object} opts configs for Neo.worker.Message\n     * @param {Array} [transfer] An optional array of Transferable objects to transfer ownership of.\n     * If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from\n     * and becomes available only to the worker it was sent to.\n     * @returns {Promise<any>}\n     */",
            "meta": {
                "range": [
                    10110,
                    10461
                ],
                "filename": "Manager.mjs",
                "lineno": 321,
                "columnno": 4,
                "path": "/Users/Shared/github/neomjs/src/worker",
                "code": {
                    "id": "astnode100063613",
                    "name": "Manager#promiseMessage",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "dest",
                        "opts",
                        "transfer"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "app, data or vdom",
                    "name": "dest"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "configs for Neo.worker.Message",
                    "name": "opts"
                },
                {
                    "type": {
                        "names": [
                            "Array"
                        ]
                    },
                    "optional": true,
                    "description": "An optional array of Transferable objects to transfer ownership of.<br />If the ownership of an object is transferred, it becomes unusable (neutered) in the context it was sent from<br />and becomes available only to the worker it was sent to.",
                    "name": "transfer"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Promise.<any>"
                        ]
                    }
                }
            ],
            "name": "promiseMessage",
            "longname": "Manager#promiseMessage",
            "kind": "function",
            "memberof": "Manager",
            "scope": "instance",
            "$longname": "Manager#promiseMessage",
            "$kind": "method",
            "id": 1897,
            "neoClassName": "Neo.worker.Manager"
        }
    ]
}