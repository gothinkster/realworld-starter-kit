basePath: /
definitions:
  api.authResponse:
    properties:
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.authenticationRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.profile:
    properties:
      bio:
        type: string
      following:
        type: boolean
      image:
        type: string
      username:
        type: string
    type: object
  api.profileResponse:
    properties:
      profile:
        $ref: '#/definitions/api.profile'
    type: object
  api.registrationRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.updateUserRequest:
    properties:
      bio:
        type: string
      email:
        type: string
      image:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  api.userResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      image:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  utils.errorWrapper:
    properties:
      errors:
        $ref: '#/definitions/utils.errors'
    type: object
  utils.errors:
    properties:
      body:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: it.pavelkozlov@gmail.com
    name: Developer
    url: https://github.com/pavelkozlov
  description: This is a sample server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Real world API
  version: "1.0"
paths:
  /api/profiles/{username}:
    get:
      consumes:
      - application/json
      description: Returns User
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.profileResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.errorWrapper'
      summary: Get User Profile
      tags:
      - user
  /api/user:
    get:
      consumes:
      - application/json
      description: Returns a User that's the current user
      parameters:
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.profileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.errorWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.errorWrapper'
      summary: Get Current User
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Returns User that's the current user
      parameters:
      - description: updateUserRequest
        in: body
        name: updateUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      - description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.profileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.errorWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.errorWrapper'
      summary: Update Current User
      tags:
      - user
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Allow user to get access token
      parameters:
      - description: authenticationRequest
        in: body
        name: authenticationRequest
        required: true
        schema:
          $ref: '#/definitions/api.authenticationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.authResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.errorWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.errorWrapper'
      summary: Authentication
      tags:
      - user
  /api/users/registration:
    post:
      consumes:
      - application/json
      description: Allow user create a new account
      parameters:
      - description: registrationRequest
        in: body
        name: registrationRequest
        required: true
        schema:
          $ref: '#/definitions/api.registrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.authResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.errorWrapper'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.errorWrapper'
      summary: Registration
      tags:
      - user
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
